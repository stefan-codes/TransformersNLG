(
<tf.Tensor: id=2722, shape=(), dtype=string, numpy=b'e foi uma revela\xc3\xa7\xc3\xa3o .'>, 
<tf.Tensor: id=2723, shape=(), dtype=string, numpy=b'and it was a revelation .'>
)


(
	OrderedDict(
			[(
				'mr', 
 				<tf.Tensor: id=1006, shape=(1,), dtype=string, numpy=array([b'name[The Cricketers], eatType[coffee shop], customer rating[5 out of 5], familyFriendly[yes], near[Crowne Plaza Hotel]'], dtype=object)>
			)]
		), 
	<tf.Tensor: id=1007, shape=(1,), dtype=string, numpy=array([b'The Cricketers is a coffee shop located near Crowne Plaza Hotel. It has a customer rating of 5 out of 5 and is children friendly.'], dtype=object)>
)


OrderedDict([('mr', <tf.Tensor: id=104, shape=(1,), dtype=string, numpy=
array([b'name[Aromi], eatType[restaurant], food[Japanese], area[city centre]'],
      dtype=object)>)])

tf.Tensor([b'Come check out Alimentum restaurant serving upscale cuisine mid-price with good reviews located next to Yippee Noodle Bar.'], shape=(1,), dtype=string)




They both have element_spec:
(TensorSpec(shape=(), dtype=tf.string, name=None), TensorSpec(shape=(), dtype=tf.string, name=None))

examples is type dict
train_examples is type DatasetV1Adapter

where my data is tuple
